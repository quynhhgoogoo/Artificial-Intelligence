from scipy.spatial.distance import cosine

import math
import numpy as np

with open("words.txt", encoding='utf-8') as f:
    words = dict()
    
    # Iterate through the word.txt generated by word2vec
    for i in range (50000):
        row = next(f).split()
        
        # Get a vector representation of each word in a row
        word = row[0]
        vector = np.array([float (x) for x in row [1:]])
        
        #Store value inside dictionary
        words[word] = vector

def distance(w1, w2):
    '''Calculate vector distance between two different words'''
    return cosine(w1, w2)

def closet_words(embedding):
    '''Get 10 synonyms from given word'''
    distances = {
        w: distance(embedding, words[w])
        for w in words
    }

    return sorted(distances, key = lambda w: distances[w])[:10]

def closet_word(embedding):
    '''Get one closet word to given word'''
    return closet_word(embedding)[0]